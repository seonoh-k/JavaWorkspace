
public class MethodEx {
	
	
	// 메소드의 기본형
//	리턴타입 메소드명([매개변수, ...]) {
//		실행문;
//		[return 값;] // 생략 가능 메소드를 종료하는 역할도 한다.
//	}
	
	// 리턴타입 : return 값의 데이터 타입. 기본형, 참조형, void(return 값 없음)
	// 매개변수 : 메소드가 실행하는데 필요한 데이터를 받아오는 역할. 생략 가능
	
//	void add() {
//		System.out.println(1+2);
//	}
//	
//	void add2(int a, int b) { // 매개변수도 지역변수
//		System.out.println(a + b);
//	}
//	
//	int add3(int a, int b) {
//		return a + b;
//	}
//	
//	double add4(double a, double b) {
//		return a + b; // 강제 형 변환을 할 수는 있으나 값의 손실이 발생하기 때문에 하지 않는 편이 좋다.
//	}
//	
//	// 빼기 메소드
//	int sub(int a, int b) {
//		return a - b;
//	}
//	
//	// 곱하기 메소드
//	int mul(int a, int b) {
//		return a * b;
//	}
//	
//	// 나누기 메소드
//	double div(int a, int b) {
//		return a / b;
	
//	int discrimin(int x) {
		// 조건문의 경우 true, false 모두 return 값이 필요하다.
//		if(x % 2 == 0) {
//			return x;
//		}else {
//			return 0;
//		}
	
//		if(x % 2 == 0) {
//			return x;
//		}
//		
//		return 0;
//	}
	
//	void discrimin2(int x) {
//		if(x >= 5) {
//			System.out.println("메소드 종료");
//			return; // void와 함께 사용할 때는 break와 같다. 메소드의 즉시 종료
//		}
//		System.out.println(x);
//	}
	
}
